// Generated by CoffeeScript 1.5.0
(function() {

  define(['aloha', 'aloha/plugin', 'jquery', 'ui/ui', 'ui/button', 'aloha/ephemera', 'semanticblock/semanticblock-plugin', 'css!assessment/css/assessment-plugin.css'], function(Aloha, Plugin, $, UI, Button, Ephemera, semanticBlock) {
    var CONFIRM_DIALOG_TEMPLATE, DIALOG_TEMPLATE, PLACEHOLDER, TEMPLATE, plugin, _buildAssessmentUrl, _fetchAssessment, _querySearch, _triggerModal;
    TEMPLATE = '<div class="assessment"></div>';
    DIALOG_TEMPLATE = '<div class="modal fade assessment-modal" tabindex="-1" role="dialog">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal">&times;</button>\n      <h3>Insert an assessment</h3>\n    </div>\n    <div class="modal-body">\n      <label style="display: inline-block">\n        Assessment Url: \n        <input type="text" name="assessmentUrl">\n      </label>\n      <button class="btn" data-embed-this>Embed</button>\n\n      <label style="display: inline-block">\n        Search: \n        <input type="text" name="search">\n      </label>\n      <button class="btn" data-search>Search</button>\n\n      <div class="search-results">\n\n        <div class="template search-result">\n          <h4 class="title"></h4>\n          <p class="description"></p>\n          <a href="" class="select">select</p>\n        </div>\n\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button class="btn action cancel" data-dismiss="modal">Cancel</button>\n    </div>\n</div>';
    CONFIRM_DIALOG_TEMPLATE = '<div class="modal fade assessment-confirm-modal" tabindex="-1" role="dialog">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal">&times;</button>\n      <h3>Insert an assessment</h3>\n    </div>\n    <div class="modal-body">\n    </div>\n    <div class="modal-footer">\n      <button class="btn action cancel">Back</button>\n      <button class="btn action submit">Go!</button>\n    </div>\n</div>';
    PLACEHOLDER = '<span class="aloha-ephemera"></span>';
    _buildAssessmentUrl = function(id) {
      return plugin.settings.assessmentUrl + id;
    };
    _fetchAssessment = function(url) {
      return $.get(plugin.settings.oembedUrl, {
        url: url
      });
    };
    _querySearch = function(query) {
      return $.get(plugin.settings.searchUrl, {
        q: query
      });
    };
    _triggerModal = function(e) {
      var $dialog, $placeholder, range;
      e.preventDefault();
      $placeholder = $(PLACEHOLDER);
      range = Aloha.Selection.getRangeObject();
      GENTICS.Utils.Dom.insertIntoDOM($placeholder, range, Aloha.activeEditable.obj);
      $dialog = $(DIALOG_TEMPLATE);
      $dialog.on('change', '[name="assessmentUrl"]', function() {
        return $dialog.find('button[data-embed-this]').attr('data-embed-this', $(this).val());
      });
      $dialog.on('click', 'button[data-search]', function() {
        var $searchResultsContainer;
        $searchResultsContainer = $dialog.find('.search-results');
        return _querySearch($dialog.find('[name="search"]').val()).success(function(data) {
          var $element, $template, result, _i, _len, _ref, _results;
          $template = $searchResultsContainer.find('.template');
          $searchResultsContainer.children().not($template).remove();
          $searchResultsContainer.hide();
          _ref = data.assessments;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            result = _ref[_i];
            result = result.assessments;
            $searchResultsContainer.show();
            $element = $template.clone().removeClass('template');
            $element.find('.title').text(result.title);
            $element.find('.description').text(result.description);
            $element.find('.select').attr('data-embed-this', _buildAssessmentUrl(result.id));
            _results.push($element.appendTo($searchResultsContainer));
          }
          return _results;
        });
      });
      $dialog.on('click', '[data-embed-this]', function(e) {
        var url;
        e.preventDefault();
        url = $(this).attr('data-embed-this');
        return _fetchAssessment(url).success(function(data) {
          var $confirmDialog;
          $dialog.modal('hide');
          $confirmDialog = $(CONFIRM_DIALOG_TEMPLATE);
          $confirmDialog.css('width', data.width);
          $confirmDialog.find('.modal-body').html(data.html);
          $confirmDialog.modal({
            show: true
          });
          $confirmDialog.on('click', '.cancel', function() {
            $confirmDialog.modal('hide');
            return $dialog.modal('show');
          });
          return $confirmDialog.on('click', '.submit', function() {
            var $element;
            $confirmDialog.modal('hide');
            $element = $(TEMPLATE).html(data.html);
            return semanticBlock.insertOver($element, $placeholder);
          });
        });
      });
      return $dialog.modal({
        show: true
      });
    };
    return plugin = Plugin.create('assessment', {
      defaults: {
        oembedUrl: 'http://www.openassessments.org/oembed.json',
        searchUrl: 'http://www.openassessments.org/api/assessments.json',
        assessmentUrl: 'http://www.openassessments.com/users/u/assessments/'
      },
      getLabel: function() {
        return 'Assessment';
      },
      appendTo: function(target) {
        return semanticBlock.appendElement(jQuery(TEMPLATE), target);
      },
      selector: '.assessment',
      options: function($el) {
        return {
          buttons: ['copy']
        };
      },
      init: function() {
        semanticBlock.register(this);
        return UI.adopt('insertAssessment', Button, {
          click: _triggerModal
        });
      }
    });
  });

}).call(this);
