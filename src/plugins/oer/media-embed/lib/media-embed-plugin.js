// Generated by CoffeeScript 1.7.1
(function() {
  define(['aloha', 'aloha/plugin', 'jquery', 'aloha/ephemera', 'ui/ui', 'ui/button', 'semanticblock/semanticblock-plugin', 'css!media-embed/css/media-embed-plugin.css'], function(Aloha, Plugin, jQuery, Ephemera, UI, Button, semanticBlock) {
    var CONFIRM_DIALOG, DIALOG, TEMPLATE, embed, endpoints;
    DIALOG = '<div id="mediaEmbedDialog" class="modal hide fade" tabindex="-1" role="dialog" data-backdrop="false">\n  <div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n    <h3>Add video, slides or other media</h3>\n  </div>\n  <div class="modal-body">\n    <form>\n      <label style="display: inline-block">\n        URL: \n        <input type="text" name="videoUrl" size="90">\n      </label>\n      <button class="btn">Go</button>\n    </form>\n  </div>\n  <div class="modal-footer">\n    <button class="btn cancel">Cancel</button>\n  </div>\n</div>';
    CONFIRM_DIALOG = '<div id="mediaConfirmEmbedDialog" class="modal hide fade" tabindex="-1" role="dialog" data-backdrop="false">\n  <div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n    <h3>Add video, slides or other media</h3>\n  </div>\n  <div class="modal-body">\n    <div class="embed-preview"></div>\n    <form>\n      <label>\n        Figure Title: \n        <input type="text" name="figureTitle" size="120">\n      </label>\n      <em>shows above the embedded content</em>\n\n      <label>Figure Caption:</label>\n      <textarea name="figureCaption" rows="4"></textarea>\n      <em>shows below the embedded content</em>\n    </form>\n  </div>\n  <div class="modal-footer">\n    <button class="btn cancel">Back</button>\n    <button class="btn primary embed">Insert Now</button>\n  </div>\n</div>';
    TEMPLATE = '<figure data-type="embed" itemscope="itemscope" itemtype="http://schema.org/CreativeWork">\n  <div data-type="title"></div>\n  <div data-type="alternates"> \n  </div>\n  <meta itemprop="url" content=""/>\n  <span itemscope="itemscope" itemtype="http://schema.org/Person" itemprop="author">\n      <meta itemprop="name" content="Mr. Bees" />\n      <meta itemprop="url" content="http://www.flickr.com/photos/bees/" />\n  </span>\n  <meta itemprop="accessibilityFeature" content="captions" />\n  <figcaption>\n    <a itemprop="url" href="">Source</a>: by \n    <a itemprop="author" href=""></a>\n  </figcaption>\n</figure>';
    endpoints = {
      "default": 'http://noembed.com/embed'
    };
    return embed = Plugin.create('mediaEmbed', {
      ignore: '[data-type="title"],[data-type="alternates"],.noembed-embed,.noembed-embed *',
      create: (function(_this) {
        return function(thing) {
          var $thing;
          $thing = $(TEMPLATE);
          $thing.find('[data-type="title"]').text(thing.title);
          $thing.find('[itemprop="url"]').attr('content', thing.url);
          $thing.find('[itemprop="author"] [itemprop="name"]').attr('content', thing.author);
          $thing.find('[itemprop="author"] [itemprop="url"]').attr('content', thing.authorUrl);
          $thing.find('a[itemprop="author"]').attr('href', thing.authorUrl);
          $thing.find('a[itemprop="author"]').text(thing.author);
          $thing.find('figcaption').append(thing.caption);
          $thing.find('[data-type="alternates"]').html(thing.html);
          return semanticBlock.insertOverPlaceholder($thing, $('.oer-placeholder'));
        };
      })(this),
      confirm: (function(_this) {
        return function(thing) {
          var $dialog;
          $dialog = $('#mediaConfirmEmbedDialog');
          if (!$dialog.length) {
            $dialog = $(CONFIRM_DIALOG);
          }
          $dialog.find('.embed-preview').empty().append(thing.html);
          $dialog.find('input,textarea').val('');
          if (thing.title) {
            $dialog.find('input[name="figureTitle"]').val(thing.title);
          }
          $dialog.find('.cancel').off('click').click(function(e) {
            e.preventDefault(true);
            $dialog.modal('hide');
            return embed.showDialog();
          });
          $dialog.find('.embed').off('.embed').click(function(e) {
            e.preventDefault(true);
            return $(this).parents('.modal').first().find('form').submit();
          });
          $dialog.find('form').off('submit').submit(function(e) {
            e.preventDefault(true);
            $dialog.modal('hide');
            return embed.create({
              url: thing.url,
              html: thing.html,
              title: $dialog.find('[name="figureTitle"]').val(),
              caption: $dialog.find('[name="figureCaption"]').val(),
              author: thing.author,
              authorUrl: thing.authorUrl
            });
          });
          return $dialog.modal({
            show: true
          });
        };
      })(this),
      embedByUrl: (function(_this) {
        return function(url) {
          var bits, domain, endpoint;
          bits = url.match(/(?:https?:\/\/)?(?:www\.)?([^\.]*)/);
          if (bits.length === 2) {
            domain = bits[1];
            endpoint = endpoints[domain] || endpoints['default'];
            return $.ajax({
              url: endpoint,
              data: {
                format: 'json',
                url: url
              },
              dataType: 'json'
            }).done(function(data) {
              return embed.confirm({
                url: data.url || url,
                html: data.html,
                title: data.title,
                author: data.author_name,
                authorUrl: data.author_url
              });
            }).fail(function() {
              return console.log('foobar');
            });
          }
        };
      })(this),
      showDialog: function() {
        var $dialog;
        $dialog = $('#mediaEmbedDialog');
        if (!$dialog.length) {
          $dialog = $(DIALOG);
        }
        $dialog.find('input').val('');
        $dialog.find('form').off('submit').submit((function(_this) {
          return function(e) {
            e.preventDefault(true);
            $dialog.modal('hide');
            return _this.embedByUrl($dialog.find('input[name="videoUrl"]').val());
          };
        })(this));
        return $dialog.modal('show');
      },
      init: function() {
        UI.adopt("insert-mediaEmbed", Button, {
          click: (function(_this) {
            return function() {
              return _this.showDialog();
            };
          })(this)
        });
        UI.adopt("insertMediaEmbed", Button, {
          click: (function(_this) {
            return function() {
              var range;
              range = Aloha.Selection.getRangeObject();
              GENTICS.Utils.Dom.insertIntoDOM($('<span class="aloha-ephemera oer-placeholder"></span>'), range, Aloha.activeEditable.obj);
              return _this.showDialog();
            };
          })(this)
        });
        return semanticBlock.register(this);
      }
    });
  });

}).call(this);
