// Generated by CoffeeScript 1.3.3
(function() {

  define(['aloha', 'jquery', 'aloha/console'], function(Aloha, jQuery, console) {
    var filter, populator, selector, showModalDialog;
    showModalDialog = function($a) {
      var appendOption, dialog, figuresAndTables, href, linkContents, linkExternal, linkInternal, linkSave, orgElements, root;
      root = Aloha.activeEditable.obj;
      dialog = jQuery('<div class="modal" id="linkModal" tabindex="-1" role="dialog" aria-labelledby="linkModalLabel" aria-hidden="true">\n  <div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>\n    <h3 id="linkModalLabel">Edit Link</h3>\n  </div>\n  <div class="modal-body">\n    <h4>Display Text</h4>\n    <input id="link-contents" class="input-long" type="text" placeholder="Enter a phrase here"/>\n    <h4>Link Destination</h4>\n    <div class="tabbable tabs-left"> <!-- Only required for left/right tabs -->\n      <ul class="nav nav-tabs">\n        <li><a href="#link-tab-external" data-toggle="tab">External</a></li>\n        <li><a href="#link-tab-internal" data-toggle="tab">Internal</a></li>\n      </ul>\n      <div class="tab-content">\n        <div class="tab-pane" id="link-tab-external">\n          <label for="link-external">Link to webpage</label>\n          <input class="link-external" id="link-external" type="text" placeholder="http://"/>\n        </div>\n        <div class="tab-pane" id="link-tab-internal">\n          <label for="link-internal">Link to a part in this document</label>\n          <select class="link-internal" id="link-internal" size="5" multiple="multiple"></select>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="modal-footer">\n    <button class="btn btn-primary link-save">Save changes</button>\n    <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>\n  </div>\n</div>');
      if (!$a.children()[0]) {
        linkContents = dialog.find('#link-contents');
        linkContents.val($a.text());
      }
      linkExternal = dialog.find('.link-external');
      linkInternal = dialog.find('.link-internal');
      linkSave = dialog.find('.link-save');
      appendOption = function(id, contentsToClone) {
        var clone, contents, option;
        clone = contentsToClone[0].cloneNode(true);
        contents = jQuery(clone).contents();
        option = jQuery('<option></option>');
        option.attr('value', '#' + id);
        option.append(contents);
        return option.appendTo(linkInternal);
      };
      orgElements = root.find('h1,h2,h3,h4,h5,h6');
      figuresAndTables = root.find('figure,table');
      orgElements.filter(':not([id])').each(function() {
        return jQuery(this).attr('id', GENTICS.Utils.guid());
      });
      orgElements.each(function() {
        var id, item;
        item = jQuery(this);
        id = item.attr('id');
        return appendOption(id, item);
      });
      figuresAndTables.each(function() {
        var caption, id, item;
        item = jQuery(this);
        id = item.attr('id');
        caption = item.find('caption,figcaption');
        return appendOption(id, caption);
      });
      href = null;
      dialog.find('.link-tab-external').on('shown', function() {
        return href = linkExternal.val();
      });
      dialog.find('.link-tab-internal').on('shown', function() {
        return href = linkInternal.val();
      });
      linkExternal.add(linkInternal).on('change', function() {
        return href = jQuery(this).val();
      });
      href = $a.attr('href');
      dialog.find('.active').removeClass('active');
      if (href.match(/^#/)) {
        linkInternal.val(href);
        dialog.find('#link-tab-internal').addClass('active');
        dialog.find('a[href=#link-tab-internal]').parent().addClass('active');
      } else {
        linkExternal.val(href);
        dialog.find('#link-tab-external').addClass('active');
        dialog.find('a[href=#link-tab-external]').parent().addClass('active');
      }
      linkSave.on('click', function() {
        if (linkContents.val() && linkContents.val().trim()) {
          $a.contents().remove();
          $a.append(linkContents.val());
        }
        $a.attr('href', href);
        return dialog.modal('hide');
      });
      dialog.modal('show');
      dialog.on('hidden', function() {
        return dialog.remove();
      });
      return dialog;
    };
    selector = 'a';
    filter = function() {
      return this.nodeName.toLowerCase() === 'a';
    };
    populator = function() {
      var $bubble, $el, a, change, href;
      $el = this;
      $bubble = jQuery('<div class="link-popover"></div>');
      href = $el.attr('href');
      a = jQuery('<a target="_blank" rel="noreferrer"></a>').appendTo($bubble);
      a.attr('href', href);
      a.append(href);
      $bubble.append(' - ');
      change = jQuery('<button class="btn">Change...</div>');
      change.appendTo($bubble);
      change.on('mousedown', function() {
        var dialog;
        return dialog = showModalDialog($el);
      });
      return $bubble.contents();
    };
    return {
      selector: selector,
      populator: populator,
      filter: filter
    };
  });

}).call(this);
